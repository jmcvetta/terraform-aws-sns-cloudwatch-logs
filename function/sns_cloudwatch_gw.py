"""Write log entries to cloudwatch logs."""

import logging
import os

import environs
import structlog
import watchtower

env = environs.Env()
log = structlog.stdlib.get_logger()


def setup_cloudwatch_log_handler() -> watchtower.CloudWatchLogHandler:
    """
    setup_logging configures a CloudWatch log handler based on environment
    variables.

    :return: A configured CloudWatch log handler
    """
    cloudwatch_log_group = env.str("log_group")
    cloudwatch_log_stream = os.getenv("log_stream")
    cloudwatch_handler = watchtower.CloudWatchLogHandler(
        log_group=cloudwatch_log_group, stream_name=cloudwatch_log_stream
    )
    log.addHandler(cloudwatch_handler)
    return cloudwatch_handler


def main(event, context):
    log_level = env.log_level("log_level", logging.INFO)
    structlog.configure(wrapper_class=structlog.make_filtering_bound_logger(log_level))

    cloudwatch_handler = setup_cloudwatch_log_handler()

    try:
        # FIXME: What if there are more than one record?
        message_source = event["Records"][0]["EventSource"]
    except KeyError:
        log.warn("Unexpected event format", event=event)
        return

    if message_source == "aws:sns":
        subject = event["Records"][0]["Sns"]["Subject"]
        body = event["Records"][0]["Sns"]["Message"]

        if subject:
            log.info("{}\n{}".format(subject, body))
        else:
            log.info(body)

        cloudwatch_handler.flush()
    else:
        log.warn("Message source is not aws:sns", event=event)

    return "Generated by Lambda"  # FIXME: What should we return?
